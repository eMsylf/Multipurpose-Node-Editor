using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using BobJeltes.AI.BehaviorTree;
using BobJeltes.AI.BehaviorTree.Nodes;

public class #SCRIPTNAME# : CompositeNode
{
    // This is called when the node is first updated
    public override void OnStart()
    {
        i = 0;
    }

    // This is called when the node stops being updated
    public override void OnStop()
    {
        
    }

    // This is called when the node is updated
    public override Result OnUpdate(BehaviorTreeExecutor behaviorTreeExecutor)
    {
        // Example code from Sequence
        // for (; i < children.Count; i++)
        //{
        //    Result result = children[i].BTUpdate(behaviorTreeExecutor);
        //    switch (result)
        //    {
        //        case Result.Failure:
        //            i = 0;
        //            return result;
        //        case Result.Running:
        //            return result;
        //    }
        //}
        //i = 0;
        return Result.Success;
    }

    // This is used to copy data when creating/saving/loading nodes. Be sure to add every variable you add to this class.
    public override void CopyData(Node source)
    {
        // Example:
        // variableName = ((#SCRIPTNAME#)source).variableName;
        base.CopyData(source);
    }
}
